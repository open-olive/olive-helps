{"componentChunkName":"component---src-pages-index-tsx","path":"/","result":{"data":{"allAptitude":{"edges":[{"node":{"internalName":"browser","capabilities":[{"markdown":{"html":"<p>Receive a message whenever a browser navigation event occurs in a browser running the OliveHelps extension.</p>","frontmatter":{"name":"Listen to Navigation","links_js":"listenNavigation"}}},{"markdown":{"html":"<p>Receive a message whenever a browser text selection event occurs in a browser running the OliveHelps extension.</p>","frontmatter":{"name":"Listen to Text Selection","links_js":"listenTextSelection"}}},{"markdown":{"html":"<p>Opens a tab in the first browser found running the OliveHelps extension.</p>","frontmatter":{"name":"Open Tab","links_js":"openTab"}}},{"markdown":{"html":"<p>Opens a new window in the first browser found running the OliveHelps extension.</p>","frontmatter":{"name":"Open Window","links_js":"openWindow"}}}],"markdown":{"html":"<p>Allows Loops to listen to events from the OliveHelps browser extension, and issue commands to it.</p>","frontmatter":{"name":"Browser","description":"Allows Loops to listen to events from the OliveHelps browser extension, and issue commands to it."}}}},{"node":{"internalName":"clipboard","capabilities":[{"markdown":{"html":"<p>Receive messages whenever the clipboard contents change.</p>","frontmatter":{"name":"Listen","links_js":"listen"}}},{"markdown":{"html":"<p>Read the current text contents of the clipboard.</p>","frontmatter":{"name":"Read","links_js":"read"}}},{"markdown":{"html":"<p>Write text content to the clipboard.</p>","frontmatter":{"name":"Write","links_js":"write"}}}],"markdown":{"html":"<p>Allows Loops to read clipboard contents, be notified when clipboard contents change, and write to it.</p>","frontmatter":{"name":"Clipboard","description":"Allows Loops to read clipboard contents, write to it and be notified when clipboard contents change."}}}},{"node":{"internalName":"cursor","capabilities":[{"markdown":{"html":"<p>Receive a message whenever the user moves the cursor on screen.</p>","frontmatter":{"name":"Listen","links_js":"listenPosition"}}},{"markdown":{"html":"<p>Reads the current cursor position on screen.</p>","frontmatter":{"name":"Read","links_js":"position"}}}],"markdown":{"html":"<p>Allows Loops to get the current cursor position, and receive updates as the user moves the cursor.</p>","frontmatter":{"name":"Cursor","description":"Allows Loops to get the current cursor position and receive updates as the user moves the cursor."}}}},{"node":{"internalName":"filesystem","capabilities":[{"markdown":{"html":"<p>Copies a file from one location to another.</p>","frontmatter":{"name":"Copy","links_js":"copy"}}},{"markdown":{"html":"<p>Returns all files in the specified directory</p>","frontmatter":{"name":"Dir","links_js":"dir"}}},{"markdown":{"html":"<p>Return true if a file or directory exists at the specified location.</p>","frontmatter":{"name":"Exists","links_js":"exists"}}},{"markdown":{"html":"<p>Joins file path segments using the appropriate OS separator and returns the result as a string. </p>","frontmatter":{"name":"Join","links_js":"join"}}},{"markdown":{"html":"<p>Receive a message whenever any change is made to a file within the specified directory.</p>","frontmatter":{"name":"Listen to Directory","links_js":"listenDir"}}},{"markdown":{"html":"<p>Receive a message whenever any change is made to a specified file.</p>","frontmatter":{"name":"Listen for File Changes","links_js":"listenFile"}}},{"markdown":{"html":"<p>Makes a directory at the specified location.</p>","frontmatter":{"name":"Make Directory","links_js":"makeDir"}}},{"markdown":{"html":"<p>Moves a file from one location to another.</p>","frontmatter":{"name":"Move","links_js":"move"}}},{"markdown":{"html":"<p>Returns the contents of the specified file.</p>","frontmatter":{"name":"Read File","links_js":"readFile"}}},{"markdown":{"html":"<p>Removes a file/directory at the specified path.</p>","frontmatter":{"name":"Remove","links_js":"remove"}}},{"markdown":{"html":"<p>Returns info about a specified file/directory.</p>","frontmatter":{"name":"File Info","links_js":"stat"}}},{"markdown":{"html":"<p>Writes (overwrites or appends) data to the specified file with specific permissions. New file will be created if file not exist.</p>","frontmatter":{"name":"Write File","links_js":"writeFile"}}}],"markdown":{"html":"<p>Provides read and write access to the filesystem, enabling Loop Authors to read and write files.</p>\n<p><a href=\"https://github.com/open-olive/loop-development-kit/tree/main/ldk/javascript#loop-permissions\">Permissions must be declared</a> for a Loop to use the Filesystem Aptitude.</p>\n<h3 id=\"permissions\" style=\"position:relative;\">Permissions<a href=\"#permissions\" aria-label=\"permissions permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>The filesystem permissions object must be populated with the absolute paths of the files and directories you want to access in the following format:</p>\n<pre><code class=\"language-json5\">{\n  \"ldk\": {\n    \"permissions\": {\n      \"filesystem\": {\n        \"pathGlobs\": [\n          {\n            // Provides access to all files in the /tmp directory that have a .txt extension.\n            \"value\": \"/tmp/*.txt\"\n          },\n          {\n            // Provides access to all directories and files under the /tmp directory.\n            \"value\": \"/tmp/**\"\n          },\n          {\n            // Provides access to all files with .txt extensions in the /tmp directory or any of its subdirectories.\n            \"value\": \"/tmp/**/*.txt\"\n          },\n          {\n            // Provides access to all files with .txt extensions in any subdirectory of /tmp.\n            \"value\": \"/tmp/*/*.txt\"\n          }\n        ]\n      }\n    }\n  }\n}\n</code></pre>\n<p>Attempts to access a file or directory you have not added permissions for will fail.</p>\n<h3 id=\"working-directory\" style=\"position:relative;\">Working Directory<a href=\"#working-directory\" aria-label=\"working directory permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>Each Loop gets a dedicated working directory that it can use to store files that don't need to be placed in a specific location. </p>\n<p>Other Loops will not be able to access this directory.</p>\n<p>Each Loop with filesystem permissions requested will automatically have access to this directory, its subdirectories, and any files within. If you only need access to the working directory, provide an empty <code>filesystem</code> permissions object:</p>\n<pre><code class=\"language-json\">{\n  \"ldk\": {\n    \"permissions\": {\n      \"filesystem\": {}\n    }\n  }\n}\n</code></pre>\n<p>To access a file or directory inside the working directory, provide a relative path:</p>\n<pre><code class=\"language-js\">const csvContents = await ldk.filesystem.readFile('./my-file.csv');\n</code></pre>\n<ul>\n<li>Loops can do whatever they want in this directory, but they cannot destroy their working directory. For example <code>filesystem.remove(\"./\")</code> will fail.</li>\n<li>All relative paths are automatically allowed as long as they actually resolve to something in the Loop's \"work directory\".</li>\n<li>Fil epaths which refer to parent directories (example: <code>../</code>) requires permissions to be specifically provided as normal.</li>\n<li>Shutting down or updating a Loop does not delete the working directory or its contents.</li>\n</ul>","frontmatter":{"name":"Filesystem","description":"Provides read and write access to the filesystem, enabling Loop Authors to read and write files."}}}},{"node":{"internalName":"keyboard","capabilities":[{"markdown":{"html":"<p>Receive a notification for every character that is entered. A separate notification is sent for each character entered as it happens.</p>","frontmatter":{"name":"Listen to Character Entry","links_js":"listenCharacter"}}},{"markdown":{"html":"<p>Allows Loops to observe when a specific hotkey combination (letter/number + modifier keys like Ctrl, Alt, Shift) are pressed or released.</p>","frontmatter":{"name":"Listen for Hot Key","links_js":"listenHotkey"}}},{"markdown":{"html":"<p>Receive a notification whenever the user types text. Notifications are sent whenever the user stops typing for one second and contain all the text entered since the last notification. By default, if any Olive Helps window is in focus, no notification is sent.</p>","frontmatter":{"name":"Listen to Text","links_js":"listenText"}}}],"markdown":{"html":"<p>Observe keyboard activity.</p>","frontmatter":{"name":"Keyboard","description":"Observes Keyboard activity."}}}},{"node":{"internalName":"network","capabilities":[{"markdown":{"html":"<p>Decode provided value</p>","frontmatter":{"name":"Decode","links_js":"decode"}}},{"markdown":{"html":"<p>Encode provided text</p>","frontmatter":{"name":"Encode","links_js":"encode"}}},{"markdown":{"html":"<p>Initiates a HTTPS request to a network address and returns the response body and headers. Only HTTPS addresses are supported.</p>","frontmatter":{"name":"HTTP Request","links_js":"httpRequest"}}},{"markdown":{"html":"<p>Initiates a WebSocket connection. Returns a Socket object which can be used to write to the socket or set a message handler function.</p>\n<p>To initailize a WebSocket connection, you'll first need to create a SocketConfiguration object. The <code>url</code> of the WebSocket is the only required field (see the <a href=\"https://open-olive.github.io/loop-development-kit/ldk/javascript/interfaces/socketconfiguration.html\">SocketConfiguration docs</a> for more configuration options). This URL must use the <code>wss://</code> scheme.</p>\n<pre><code>const socketConfig: SocketConfiguration = {\n    url: \"wss://echo.websocket.org\"\n}\n\nconst socket: network.Socket = await network.webSocketConnect(socketConfig);\n</code></pre>\n<p>Once you have a Socket object, you can set a callback to handle incoming messages with <code>setMessageHandler</code>:</p>\n<pre><code>await socket.setMessageHandler(async (err, message) => {\n    // do something with message contents\n})\n</code></pre>\n<p>Write messages to the WebSocket with <code>writeMessage</code>:</p>\n<pre><code>await socket.writeMessage(\"Hello WebSocket!\")\n</code></pre>\n<p>Close the Socket:</p>\n<pre><code>await socket.close()\n</code></pre>\n<p>Set a callback for when the WebSocket is closed:</p>\n<pre><code>await socket.setCloseHandler(async (err, code, text) => {\n    // handle any tasks for closing out the connection\n})\n</code></pre>","frontmatter":{"name":"WebSocket Connect","links_js":"websocketconnect"}}}],"markdown":{"html":"<p>Allows Loops to make network requests to external services.</p>\n<p><a href=\"https://github.com/open-olive/loop-development-kit/tree/main/ldk/javascript#loop-permissions\">Permissions must be declared</a> for a Loop to use the Network Aptitude. </p>\n<p>The network permissions object must be populated with the domains you want to access in the following format:</p>\n<pre><code>ldk:\n permissions:\n   network:\n     urlDomains:\n       -  value: 'api.fda.gov'\n</code></pre>","frontmatter":{"name":"Network","description":"Allows Loops to make network requests to external services."}}}},{"node":{"internalName":"process","capabilities":[{"markdown":{"html":"<p>Receive a notification whenever a process starts or stops on the system.</p>","frontmatter":{"name":"Listen to Processes Changes","links_js":"listenAll"}}},{"markdown":{"html":"<p>Get all the current processes running on the system.</p>","frontmatter":{"name":"Read Processes","links_js":"all"}}}],"markdown":{"html":"<p>Allows Loops to observe processes running on the system.</p>","frontmatter":{"name":"Process","description":"Allows Loops to observe processes running on the system."}}}},{"node":{"internalName":"system","capabilities":[{"markdown":{"html":"<p>Returns a string representation of the host Operating System.</p>\n<p>Possible values:</p>\n<p><code>darwin</code> - Indicates that the host OS is MacOS.</p>\n<p><code>windows</code> - Indicates that the host OS is Windows.</p>","frontmatter":{"name":"Operating System","links_js":"operatingSystem"}}}],"markdown":{"html":"<p>Allows Loops to access information about the host system.</p>","frontmatter":{"name":"System","description":"Allows Loops to access information about the host system."}}}},{"node":{"internalName":"ui","capabilities":[{"markdown":{"html":"<p>Get notified when the user uses the Olive Helps global search.</p>","frontmatter":{"name":"Global Search","links_js":"listenGlobalSearch"}}},{"markdown":{"html":"<p>Get notified when the user searches for a value in the Sidebar</p>","frontmatter":{"name":"Searchbar","links_js":"listenSearchbar"}}}],"markdown":{"html":"<p>Allows Loops to receive a notification whenever the user interacts with UI elements in Olive Helps</p>","frontmatter":{"name":"UI","description":"Allows Loops to receive a notification whenever the user interacts with UI elements in Olive Helps."}}}},{"node":{"internalName":"user","capabilities":[{"markdown":{"html":"<p>Receive a <a href=\"https://jwt.io\">JWT</a> identifying the currently logged in Olive Helps user.</p>\n<p>The jwt function can take an optional configuration object specifying the inclusion of optional claims.</p>\n<p>DEPRECATION NOTE: The current default behavior of the jwt call is to <em>include</em> the email claim, however, upcoming changes will deprecate this behavior. New Loop code which relies on the email claim should explicitly request it with the configuration object instead of relying on the default behavior (e.g. <code>jwt({includeEmail: true})</code> ).</p>\n<h3 id=\"jwt-claims\" style=\"position:relative;\">JWT Claims<a href=\"#jwt-claims\" aria-label=\"jwt claims permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>The claims in the JWT are as follows:</p>\n<p>Standard Claims:</p>\n<ul>\n<li><code>sub</code> (Subject): contains the unique User ID of the current Olive Helps user.</li>\n<li><code>exp</code> (Expiration): The token is set to expire 5 minutes from the time of its creation.</li>\n<li><code>iss</code> (Issuer): the endpoint from which the token was requested. This should be <code>https://sidekick.oliveai.com/api/user/createJWT</code>.</li>\n</ul>\n<p>Additional Claims:</p>\n<ul>\n<li><code>azp</code> (Authorized Party): contains the LoopID of the Loop which requested the JWT.</li>\n</ul>\n<p>Optional Claims:</p>\n<ul>\n<li><code>email</code>: contains the email address of the current Olive Helps user. This claim can be requested by passing true as the value of the includeEmail parameter. If your Loop does not need the email, pass <code>{includeEmail: false}</code> to omit the claim (see deprecation note above).</li>\n</ul>\n<h3 id=\"optional-claim-permissions\" style=\"position:relative;\">Optional Claim Permissions<a href=\"#optional-claim-permissions\" aria-label=\"optional claim permissions permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>Loops which require the use of optional JWT claims must request access to that claim in the Loop <a href=\"https://github.com/open-olive/loop-development-kit/tree/main/ldk/javascript#loop-permissions\">Permissions configuration</a>.</p>\n<p>The <code>user</code> permissions object must be populated with the names of any requested optional claims in the following format:</p>\n<pre><code>'ldk': {\n    'permissions': {\n        'user': {\n            'optionalClaims': [\n                { 'value': 'email' }\n            ]\n        }\n    }\n}\n</code></pre>\n<p>Loops which do not require any optional claims should pass an empty object for the user permissions:</p>\n<pre><code>'ldk': {\n    'permissions': {\n        'user': {}\n    }\n}\n</code></pre>\n<h3 id=\"jwt-signing\" style=\"position:relative;\">JWT Signing<a href=\"#jwt-signing\" aria-label=\"jwt signing permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>The JWT from the User Aptitude will be signed with a RS256 key. The corresponding public key can be used to validate the signature of the JWT. This will verify that the JWT was generated by the User Aptitude. The public key for this validation can be found here on the Dev Hub site, at <a href=\"docs/../../../../static/public-keys/olive-helps/user-aptitude/user-aptitude-jwt-rsa.pub\">this link</a>.</p>","frontmatter":{"name":"JWT","links_js":"jwt"}}}],"markdown":{"html":"<p>Allows Loops to obtain a signed JWT which can be used to identify an Olive Helps user to 3rd party services.</p>\n<p>This token is signed by Olive and contains claims which identify the current Olive Helps user. Loop Authors can use the JWT to authenticate the current user on their own services. The most likely use case for the JWT would be as an initial identifying token for an external service. The service in question could then issue its own JWT (or other authentication method) for future requests to that service.</p>","frontmatter":{"name":"User","description":"Allows Loops to obtain a signed JWT which can be used to identify an Olive Helps user to 3rd party services."}}}},{"node":{"internalName":"vault","capabilities":[{"markdown":{"html":"<p>Deletes a certain key</p>","frontmatter":{"name":"Delete","links_js":"remove"}}},{"markdown":{"html":"<p>Returns whether the key exists</p>","frontmatter":{"name":"Exists","links_js":"exists"}}},{"markdown":{"html":"<p>Reads the value from the given key.</p>","frontmatter":{"name":"Read","links_js":"read"}}},{"markdown":{"html":"<p>Writes a value to a given key, overwriting any existing value.</p>","frontmatter":{"name":"Write","links_js":"write"}}}],"markdown":{"html":"<p>Allows Loops to retrieve and store strings in the system's secure storage (Keychain for MacOS, Credential Manager for Windows).</p>","frontmatter":{"name":"Vault","description":"Allows Loops to retrieve and store strings in the system's secure storage."}}}},{"node":{"internalName":"whisper","capabilities":[{"markdown":{"html":"<p>Adds a new whisper to Olive Helps based on the configuration provided. Returns a promise which provides a reference to the newly created whisper.</p>\n<p>The following component types are available:</p>\n<ul>\n<li>Box - A container component for formatting other components. </li>\n<li>Button - A container component for formatting other components.</li>\n<li>Checkbox - A container component for formatting other components.</li>\n<li>CollapseBox - A container component to allow content to be opened and closed with a button click.</li>\n<li>Divider - This component shows a horizontal divider to separate different kinds on content in a whisper. This component has no options.</li>\n<li>Email - The text input field allows the user to provide an email address.</li>\n<li>Link - This component shows a link that can either open a link in the user's default browser or function as an <code>onClick</code> to allow for loops to do things like send a new whisper.</li>\n<li>ListPair - This component shows a two column view of information typically used for lists of information.</li>\n<li>\n<p>Markdown - Renders a message as Markdown.</p>\n<ul>\n<li>Markdown syntax for the Markdown Component Type is defined by to the <a href=\"https://commonmark.org/\">CommonMark</a> specification. </li>\n<li>\n<p>Tip: if using a Template Literal for specifying markdown <code>body</code>, leading spaces (including those suggested by code indentation) will be treated as spaces by markdown. As a consequence of this, markdown specified with tab whitespace (spaces, tabs, etc.) at the beginning of a line will <strong>not</strong> be rendered as markdown. One way to avoid this situation, is to use a library like <code>stripIndent</code> from the <a href=\"https://www.npmjs.com/package/common-tags#stripindent\">common-tags library</a>. For example:</p>\n<pre><code>stripIndent`\nA paragraph with *emphasis* and **strong importance**.\n> A block quote with ~strikethrough~ and a URL: https://oliveai.com/`;\n</code></pre>\n</li>\n</ul>\n</li>\n<li>Message - This component shows a banner in the whisper that functions as a call to action to the user.</li>\n<li>Number - The text input field allows the user to provide a number within the parameters provided.</li>\n<li>Password - The password input field allows the user to provide a password. This field protects the user by obscuring what they type. Showing each character as a solid black dot.</li>\n<li>RadioGroup - The radio group allows a loop to provide the user with a collection of options in which they select a single result. The result is selected by clicking one of the radio elements in the radio group. A selected value of -1 indicates that nothing is selected.</li>\n<li>Select - A selected value of -1 indicates that nothing is selected.</li>\n<li>Telephone - The text input field allows the user to provide a telephone number.</li>\n<li>TextInput - The text input field allows the user to provide text information. The text can be pre-populated by the loop</li>\n<li>Icon - Renders a Material Icon. For icon possibilities, see <a href=\"https://fonts.google.com/icons\">Material Icons</a>. Icons can be placed inside of Box Components.</li>\n</ul>\n<h2 id=\"whisper-data-entry\" style=\"position:relative;\">Whisper Data Entry<a href=\"#whisper-data-entry\" aria-label=\"whisper data entry permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>Provided on each newly created whisper is <code>componentState</code> property that is of <code>type StateMap = Map&#x3C;string, string | boolean | number></code>.</p>\n<p>When any of the following user editable components are assigned a <strong>unique</strong> <code>id</code> property, state will be tracked upon user interaction on <code>componentState</code>:</p>\n<ul>\n<li>Checkbox</li>\n<li>Email</li>\n<li>Number</li>\n<li>Password</li>\n<li>RadioGroup</li>\n<li>Select</li>\n<li>Telephone</li>\n<li>TextInput</li>\n</ul>\n<p>If <code>id</code> properties are not provided, component state will not be tracked. If duplicate component <code>id</code> properties are sent, then only the most recently assigned <code>id</code> will be tracked.</p>\n<p><code>componentState</code> is returned as part of the whisper object during <code>onClick</code>, <code>onChange</code> events and with <code>whisper.Create()</code>.</p>\n<p>For example:</p>\n<pre><code>const textInputId = '123';\n\nconst myWhisper = await whisper.create({\n  label: \"Component State Whisper\",\n  onClose: () => {},\n  components: [\n    {\n      type: WhisperComponentType.TextInput,\n      id: textInputId,\n      label: \"Text Input\",\n      onChange: (\n          error: Error | undefined,\n          value: string,\n          whisper: Whisper\n      ) => {\n        console.log(whisper.componentState.get(textInputId));\n      }\n    }\n  ],\n});\n\nmyWhisper.componentState.forEach((value: any, key: string) => console.log(key, value));\n</code></pre>\n<h3 id=\"whisper-data-entry-across-whisper-updates\" style=\"position:relative;\">Whisper Data Entry Across Whisper Updates<a href=\"#whisper-data-entry-across-whisper-updates\" aria-label=\"whisper data entry across whisper updates permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>If a whisper update is performed, all previously tracked component state will also persist. If new components are added to the update whisper, they will follow the rules for initial component state. If it is no longer desired to keep component state across a whisper update, then new component <code>id</code> properties should be assigned.</p>\n<h2 id=\"component-keys\" style=\"position:relative;\">Component Keys<a href=\"#component-keys\" aria-label=\"component keys permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>Each component has an optional <code>key</code> property. The <code>key</code> property is used by our React front-end to retain the state of our presentational components across Whisper updates. If provided, keys must be unique across your component's siblings otherwise the Promise returned from <code>whisper.create</code> will reject with an error.</p>\n<p>You should provide keys for your components if you are updating Whispers and adding components or changing their state.</p>\n<p>You do not need to provide keys if:</p>\n<ul>\n<li>You never update the Whisper.</li>\n<li>You only add components to the end of the component list during your updates.</li>\n</ul>\n<h2 id=\"component-validation\" style=\"position:relative;\">Component Validation<a href=\"#component-validation\" aria-label=\"component validation permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>Text inputs and selectable components provide a <code>validationError</code> field which could be used to display a custom validation error:</p>\n<ul>\n<li>Checkbox</li>\n<li>Email</li>\n<li>Number</li>\n<li>Password</li>\n<li>RadioGroup</li>\n<li>Select</li>\n<li>Telephone</li>\n<li>TextInput</li>\n<li>DateTime</li>\n</ul>\n<p>If <code>validationError</code> field is provided then component will be displayed in the error state along with the custom validation message.\nA good example of how a simple form validation could be implemented could be found <a href=\"https://github.com/open-olive/loop-development-kit/tree/main/ldk/javascript/examples/form-validation-loop\">here</a></p>","frontmatter":{"name":"Create","links_js":"create"}}}],"markdown":{"html":"<p>Allows Loops to display interactive information in a variety of formats in the Olive Helps Sidebar</p>","frontmatter":{"name":"Whisper","description":"Allows Loops to display interactive information using a variety of formats in the Olive Helps Sidebar."}}}},{"node":{"internalName":"window","capabilities":[{"markdown":{"html":"<p>Get the currently focused window and it's data.</p>","frontmatter":{"name":"Get Active Window","links_js":"activrWindow"}}},{"markdown":{"html":"<p>Get a list of all the windows and their information.</p>","frontmatter":{"name":"Get All Windows","links_js":"all"}}},{"markdown":{"html":"<p>Receive notifications whenever the currently focused window changes.</p>\n<p>Some applications will sometimes open small windows at certain times in the application lifecycle. These windows will share the same process ID as the previous one. Depending on your desired logic that change may or may not be relevant to you.</p>\n<h3 id=\"example\" style=\"position:relative;\">Example<a href=\"#example\" aria-label=\"example permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>Google Chrome 89 on MacOS generates a new active window whenever the user moves their mouse over a link. These windows share the same process ID as the previous Chrome active window event but are very short. Consider these two events:</p>\n<pre><code>2021-05-07T10:56:28-07:00 INF Received Event {\"title\":\"Google Chrome\",\"path\":\"Google Chrome\",\"pid\":2650,\"x\":-1886,\"y\":2107,\"width\":536,\"height\":22} console=info loopID=def system=secureloops\n2021-05-07T10:56:30-07:00 INF Received Event {\"title\":\"`listenActiveWindow` sends notification upon mouse move in current active window · Issue #156 · open-olive/loop-development-kit\",\"path\":\"Google Chrome\",\"pid\":2650,\"x\":-1885,\"y\":25,\"width\":1896,\"height\":2103} console=info loopID=def system=secureloops\n</code></pre>\n<p>The first event was triggered when the cursor moved over a link in Google Chrome. It is a window only 22 pixels high. The second event was triggered when the cursor moved away from the link in Chrome. It is a full sized window. Both windows share the same process ID.</p>\n<p>The first window was only 22 pixels high and so it does not represent a context change.</p>\n<p>If you're listening to active window changes to determine when the user has moved between applications, you should check to see if the process ID has also changed. </p>","frontmatter":{"name":"Listen to Active Window changes","links_js":"listenActiveWindow"}}},{"markdown":{"html":"<p>Receive a notification whenever a window is opened, closed, focused, unfocused, moved, resized, or its title changes. A window that is opened with focus will generate an Opened event and a Focused event.</p>","frontmatter":{"name":"Listen to Window changes","links_js":"listenAll"}}}],"markdown":{"html":"<p>Allows Loops to see what application windows are open in the system.</p>","frontmatter":{"name":"Window","description":"Allows Loops to see what application windows are open in the system."}}}}]},"allFile":{"edges":[{"node":{"childMarkdownRemark":{"frontmatter":{"slug":"guides/olive-helps-faqs","title":"FAQs","description":"Find answers to most of the commonly asked questions."}},"relativeDirectory":"guides"}},{"node":{"childMarkdownRemark":{"frontmatter":{"slug":"guides/olive-helps-install-guide","title":"Olive Helps installation guide","description":"Learn how to download and install Olive Helps for Windows and Mac operating systems."}},"relativeDirectory":"guides"}},{"node":{"childMarkdownRemark":{"frontmatter":{"slug":"guides/loop-approval","title":"Loop Approval Checklist","description":"Ensure your Loop meets all security, technical, product and design guidelines."}},"relativeDirectory":"guides"}},{"node":{"childMarkdownRemark":{"frontmatter":{"slug":"guides/permissions-configuration","title":"Configure Loop Permissions","description":"Learn how to set up Loop permissions"}},"relativeDirectory":"guides"}},{"node":{"childMarkdownRemark":{"frontmatter":{"slug":"guides/olive-helps-sec-it","title":"Security/IT","description":"Review Olive Helps’ data and information security standards."}},"relativeDirectory":"guides"}},{"node":{"childMarkdownRemark":{"frontmatter":{"slug":"guides/submitting-loop","title":"Submitting Your Loop","description":"Learn how to successfully submit your Loop after development."}},"relativeDirectory":"guides"}},{"node":{"childMarkdownRemark":{"frontmatter":{"slug":"guides/troubleshooting","title":"Troubleshooting","description":"View solutions to common issues and other helpful tips."}},"relativeDirectory":"guides"}},{"node":{"childMarkdownRemark":{"frontmatter":{"slug":"guides/getting-started","title":"Getting Started","description":"How to get moving running and developing your first loop."}},"relativeDirectory":"guides"}}]}},"pageContext":{}},"staticQueryHashes":["1396720334","4143883899"]}